class Solution {
    public int minOperations(int[] nums) {
        Arrays.sort(nums);
        int unique = 0;
        for(int i = 1; i <nums.length; i++){
            if(nums[i] != nums[i-1]){
                unique++;
                nums[unique] = nums[i];
            }
        }
        int cur = 1, maxsize = 0, len = nums.length;
        int min = 0, max = 0;
        for(int i = 0; i <= unique; i++){
            min = nums[i];
            max = min + len - 1;
            int R = binary(nums, i, unique, max);
            cur = R - i + 1;
            maxsize = Math.max(maxsize, cur);
        }
        
        return len - maxsize;
    }
    private int binary(int[] nums, int L, int R, int max){
        int res = L, M = L;
        while(L <= R){
            M = L + ((R - L) >> 1);
            if(nums[M] <= max){
                res = M;
                L = M + 1;
            }else{
                R = M - 1;
            }
        }
        return res;
    }
}
